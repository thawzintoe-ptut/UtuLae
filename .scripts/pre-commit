#!/bin/bash

echo "*********************************************************"
echo " Running git pre-commit hook. Running Spotless Apply..."
echo "*********************************************************"

# 1. Gather the staged files - to make sure changes are saved only for these files.
stagedFiles=$(git diff --staged --name-only)

# 2. Run Spotless to apply formatting/analysis
./gradlew spotlessApply
spotlessStatus=$?

if [ "$spotlessStatus" -ne 0 ]; then
    echo "*********************************************************"
    echo "       ********************************************      "
    echo 1>&2 "Spotless Apply found violations it could not fix."
    echo "Run './gradlew spotlessApply' in your terminal and fix the issues before trying to commit again."
    echo "       ********************************************      "
    echo "*********************************************************"
    exit 1
fi

echo "Static analysis found no problems. Proceeding to unit tests..."

# 3. Run unit tests (modify the Gradle task as needed)
#    Common tasks for Android tests include `testDebugUnitTest`, `testReleaseUnitTest`, or simply `test`.
echo "Running unit tests..."
./gradlew testDebugUnitTest
testStatus=$?

if [ "$testStatus" -ne 0 ]; then
    echo "*********************************************************"
    echo "       ********************************************      "
    echo 1>&2 "Unit tests failed. Please fix the issues before committing."
    echo "       ********************************************      "
    echo "*********************************************************"
    exit 1
fi

echo "All unit tests passed!"

# 4. Re-add staged file changes to Git (because Spotless may have modified some files)
for file in $stagedFiles; do
  if test -f "$file"; then
    git add "$file"
  fi
done

echo "*********************************************************"
echo " Pre-commit checks passed! Proceeding with commit..."
echo "*********************************************************"
exit 0
